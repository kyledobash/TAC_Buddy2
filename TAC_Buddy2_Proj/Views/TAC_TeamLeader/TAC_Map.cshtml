@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<style type="text/css">
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 650px;
        width:fit-content();
    }

    /* Optional: Makes the sample page fill the window. */
    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
    .gm-style-iw-d {
        color: green;
    }
</style>
<script>
    let map, infoWindow;

    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 8,
            mapTypeId: 'satellite',
            disableDefaultUI: true,
            zoomControl: true,
            mapTypeControl: false,
            scaleControl: true,
            streetViewControl: false,
            rotateControl: true,
            fullscreenControl: true
        });

        map.addListener('click', function (e) {
            placeMarker(e.latLng, map);
        });

        infoWindow = new google.maps.InfoWindow();
        const locationButton = document.createElement("button");
        locationButton.textContent = "Go to Current Location";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.LEFT_TOP].push(locationButton);
        locationButton.addEventListener("click", () => {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };

                        const infowindow = new google.maps.InfoWindow({
                            //change this line to inclue elevation and mgrs
                            content: "<b>*** FRIENDLY ***</b>",
                        });

                        var marker = new google.maps.Marker({
                            position: pos,
                            map: map,
                            icon: {
                                url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"
                            }
                        });

                        marker.addListener("click", () => {
                            infowindow.open(map, marker);
                        });
                        
                        map.setCenter(pos);
                        map.zoom = 18;                        
                    },
                    () => {
                        handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        });

    }

    function placeMarker(position, map) {
        const infowindow = new google.maps.InfoWindow({
            //change this line to inclue elevation and mgrs
            content: "test",
        });
        var marker = new google.maps.Marker({
            position: position,
            map: map
        });
        marker.addListener("click", () => {
            infowindow.open(map, marker);
        });
        map.panTo(position);
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);

    }
</script>
<h3>TAC Map</h3>
<div id="map"></div>

<!-- Async script executes immediately and must be after any DOM elements used in callback. -->
<script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.key&callback=initMap&libraries=&v=weekly"
        async></script>